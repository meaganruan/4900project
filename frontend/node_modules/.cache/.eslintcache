[{"/Users/meaganruan/4900project/frontend/src/index.js":"1","/Users/meaganruan/4900project/frontend/src/App.js":"2","/Users/meaganruan/4900project/frontend/src/reportWebVitals.js":"3","/Users/meaganruan/4900project/frontend/src/components/signupPage.js":"4","/Users/meaganruan/4900project/frontend/src/components/profile.js":"5","/Users/meaganruan/4900project/frontend/src/components/navbar.js":"6","/Users/meaganruan/4900project/frontend/src/components/loginPage.js":"7","/Users/meaganruan/4900project/frontend/src/components/home.js":"8","/Users/meaganruan/4900project/frontend/src/components/googleLogin.js":"9"},{"size":500,"mtime":1647290444093,"results":"10","hashOfConfig":"11"},{"size":884,"mtime":1647544160075,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1645818415151,"results":"13","hashOfConfig":"11"},{"size":1860,"mtime":1650896357316,"results":"14","hashOfConfig":"11"},{"size":290,"mtime":1650896314034,"results":"15","hashOfConfig":"11"},{"size":1537,"mtime":1650896318912,"results":"16","hashOfConfig":"11"},{"size":1483,"mtime":1650898598961,"results":"17","hashOfConfig":"11"},{"size":4830,"mtime":1650900628562,"results":"18","hashOfConfig":"11"},{"size":756,"mtime":1650898710727,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ef27e4",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/meaganruan/4900project/frontend/src/index.js",[],[],"/Users/meaganruan/4900project/frontend/src/App.js",[],[],"/Users/meaganruan/4900project/frontend/src/reportWebVitals.js",[],[],"/Users/meaganruan/4900project/frontend/src/components/signupPage.js",[],[],["49","50"],"/Users/meaganruan/4900project/frontend/src/components/profile.js",[],[],"/Users/meaganruan/4900project/frontend/src/components/navbar.js",[],[],"/Users/meaganruan/4900project/frontend/src/components/loginPage.js",[],[],"/Users/meaganruan/4900project/frontend/src/components/home.js",["51"],[],"import React, {useEffect, useState} from \"react\";\n// import styled from \"styled-components\";\nimport \"../styles/home.css\";\n// import Events from \"./data/events.json\";\n\n// function Event(props){\n//   // display event name, event Image, event description, event start/end Date, event age requirement\n// };\n\nconst Event = (props) => {\n  return(\n    <div className=\"eventCards\">\n      <div className=\"event\">\n      <img src={props.image} width=\"200px\" height=\"250px\" alt={props.eventName}/>\n      <h2>{props.eventName}</h2>\n      <h3>{props.city}, {props.state} {props.zipcode}</h3>\n      <h4>From {props.startDate} to {props.endDate}</h4>\n      <p>{props.description}</p>\n      <p>Age Requirement: {props.ageRequirement}</p>\n      </div>\n    </div>\n  );\n}\n\nconst Home = () => {\n  const [input,setInput] = useState('')\n  const [events,setEvents] = useState([])\n  const [ageOption,setAge] = useState('')\n  const [startDate, setStart] = useState('')\n  const [endDate, setEnd] = useState('')\n  // const eventList = events.map((ev) => <Events key={ev.id} events={ev}/>)\n  const inputHandler = (e) => {\n    setInput(e.target.value)\n    console.log(e.target.value)\n\n    if(e.target.value.length === 5 && !isNaN(e.target.value)) {\n      console.log(\"the input is \" + e.target.value);\n      fetch(`http://localhost:8080/events/?zipcode_like=${input}&ageRequirement_like=${ageOption}&startDate_like=${startDate}&endDate_like=${endDate}`)\n      .then((res) => res.json()) \n      .then((data) => \n      {\n        console.log(data)\n        //not working?\n        //appends to the array\n        // setEvents(currentArray => [...currentArray,...data])\n        setEvents([...data])\n      })\n      // .catch(err => {\n      //   console.log(\"no results!\")\n      // })\n      // console.log(events)\n    }\n    else{\n      console.log(\"no results\")\n    }\n  }\n  return (\n    <div className=\"home\">\n    <div className=\"search\">\n        <h2>Search for events through either Zip Code or City, State</h2>\n        <input\n        type=\"text\"\n        placeholder=\"'10002' or 'Brooklyn, New York'\"\n        onChange={inputHandler}\n        value={input}/>\n      </div>\n    <div className=\"filter\">\n        <button onClick={ToggleFilters}>Filters: </button>\n        <div id=\"filters\">\n          <label htmlFor=\"age\">| Age Requirement(s)</label>\n          <select className=\"age\" onChange={(e)=>{setAge(e.target.value); \n            console.log(\"age selected:\" + e.target.value);\n            fetch(`http://localhost:8080/events/?zipcode_like=${input}&ageRequirement_like=${e.target.value}`)\n            .then((res) => res.json()) \n            .then((data) => \n            {\n              console.log(data)\n              setEvents([...data])\n            })\n    \n          }\n          }>\n            <option value=\"\">All-Ages</option>\n            <option value=\"13\">Teens</option>\n            <option value=\"18\">18+</option>\n            <option value=\"21\">21+</option>\n          </select>\n          <label htmlFor=\"start-date-time\">| Event Start Date</label>\n          <input type=\"date\" onChange={(e)=>{setStart(e.target.value); \n          console.log(\"start date:\" + e.target.value);\n          fetch(`http://localhost:8080/events/?zipcode_like=${input}&ageRequirement_like=${ageOption}&startDate_like=${startDate}&endDate_like=${e.target.value}`)\n            .then((res) => res.json()) \n            .then((data) => \n            {\n              console.log(data)\n              setEvents([...data])\n            })\n        }\n        }>\n        </input>\n          <label htmlFor=\"end-date-time\">| Event End Date</label>\n          <input type=\"date\" onChange={(e)=>{setEnd(e.target.value); \n            console.log(\"end date:\" + e.target.value);\n            fetch(`http://localhost:8080/events/?zipcode_like=${input}&ageRequirement_like=${ageOption}&startDate_like=${startDate}`)\n            .then((res) => res.json()) \n            .then((data) => \n            {\n              console.log(data)\n              setEvents([...data])\n            })}}></input>\n        </div>\n      </div>\n      <div className=\"results\">\n        Results:\n        <div className=\"events\">\n          {events.map((entry,i) => \n          <Event \n          key={entry.id}\n          data={entry}\n          eventName={entry.eventName} \n          description={entry.description} \n          ageRequirement={entry.ageRequirement} \n          image={entry.image} \n          city={entry.city} \n          state={entry.state} \n          zipcode={entry.zipcode}\n          startDate={entry.startDate}\n          endDate={entry.endDate}\n          />)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ToggleFilters = () => {\n  var x = document.getElementById(\"filters\");\n  if (x.style.display === \"none\") {\n    x.style.display = \"block\";\n  } else {\n    x.style.display = \"none\";\n  }\n};\n\n\n\nexport default Home;\n","/Users/meaganruan/4900project/frontend/src/components/googleLogin.js",[],[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":16,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]