{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveDescription = toHaveDescription;\n\nvar _utils = require(\"./utils\"); // See algoritm: https://www.w3.org/TR/accname-1.1/#mapping_additional_nd_description\n\n\nfunction toHaveDescription(htmlElement, checkWith) {\n  (0, _utils.deprecate)('toHaveDescription', 'Please use toHaveAccessibleDescription.');\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveDescription, this);\n  const expectsDescription = checkWith !== undefined;\n  const descriptionIDRaw = htmlElement.getAttribute('aria-describedby') || '';\n  const descriptionIDs = descriptionIDRaw.split(/\\s+/).filter(Boolean);\n  let description = '';\n\n  if (descriptionIDs.length > 0) {\n    const document = htmlElement.ownerDocument;\n    const descriptionEls = descriptionIDs.map(descriptionID => document.getElementById(descriptionID)).filter(Boolean);\n    description = (0, _utils.normalize)(descriptionEls.map(el => el.textContent).join(' '));\n  }\n\n  return {\n    pass: expectsDescription ? checkWith instanceof RegExp ? checkWith.test(description) : this.equals(description, checkWith) : Boolean(description),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveDescription`, 'element', ''), `Expected the element ${to} have description`, this.utils.printExpected(checkWith), 'Received', this.utils.printReceived(description));\n    }\n  };\n}","map":{"version":3,"sources":["/Users/meaganruan/4900project/evently/node_modules/@testing-library/jest-dom/dist/to-have-description.js"],"names":["Object","defineProperty","exports","value","toHaveDescription","_utils","require","htmlElement","checkWith","deprecate","checkHtmlElement","expectsDescription","undefined","descriptionIDRaw","getAttribute","descriptionIDs","split","filter","Boolean","description","length","document","ownerDocument","descriptionEls","map","descriptionID","getElementById","normalize","el","textContent","join","pass","RegExp","test","equals","message","to","isNot","getMessage","utils","matcherHint","printExpected","printReceived"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB,C,CAEA;;;AACA,SAASF,iBAAT,CAA2BG,WAA3B,EAAwCC,SAAxC,EAAmD;AACjD,GAAC,GAAGH,MAAM,CAACI,SAAX,EAAsB,mBAAtB,EAA2C,yCAA3C;AACA,GAAC,GAAGJ,MAAM,CAACK,gBAAX,EAA6BH,WAA7B,EAA0CH,iBAA1C,EAA6D,IAA7D;AACA,QAAMO,kBAAkB,GAAGH,SAAS,KAAKI,SAAzC;AACA,QAAMC,gBAAgB,GAAGN,WAAW,CAACO,YAAZ,CAAyB,kBAAzB,KAAgD,EAAzE;AACA,QAAMC,cAAc,GAAGF,gBAAgB,CAACG,KAAjB,CAAuB,KAAvB,EAA8BC,MAA9B,CAAqCC,OAArC,CAAvB;AACA,MAAIC,WAAW,GAAG,EAAlB;;AAEA,MAAIJ,cAAc,CAACK,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,UAAMC,QAAQ,GAAGd,WAAW,CAACe,aAA7B;AACA,UAAMC,cAAc,GAAGR,cAAc,CAACS,GAAf,CAAmBC,aAAa,IAAIJ,QAAQ,CAACK,cAAT,CAAwBD,aAAxB,CAApC,EAA4ER,MAA5E,CAAmFC,OAAnF,CAAvB;AACAC,IAAAA,WAAW,GAAG,CAAC,GAAGd,MAAM,CAACsB,SAAX,EAAsBJ,cAAc,CAACC,GAAf,CAAmBI,EAAE,IAAIA,EAAE,CAACC,WAA5B,EAAyCC,IAAzC,CAA8C,GAA9C,CAAtB,CAAd;AACD;;AAED,SAAO;AACLC,IAAAA,IAAI,EAAEpB,kBAAkB,GAAGH,SAAS,YAAYwB,MAArB,GAA8BxB,SAAS,CAACyB,IAAV,CAAed,WAAf,CAA9B,GAA4D,KAAKe,MAAL,CAAYf,WAAZ,EAAyBX,SAAzB,CAA/D,GAAqGU,OAAO,CAACC,WAAD,CAD/H;AAELgB,IAAAA,OAAO,EAAE,MAAM;AACb,YAAMC,EAAE,GAAG,KAAKC,KAAL,GAAa,QAAb,GAAwB,IAAnC;AACA,aAAO,CAAC,GAAGhC,MAAM,CAACiC,UAAX,EAAuB,IAAvB,EAA6B,KAAKC,KAAL,CAAWC,WAAX,CAAwB,GAAE,KAAKH,KAAL,GAAa,MAAb,GAAsB,EAAG,oBAAnD,EAAwE,SAAxE,EAAmF,EAAnF,CAA7B,EAAsH,wBAAuBD,EAAG,mBAAhJ,EAAoK,KAAKG,KAAL,CAAWE,aAAX,CAAyBjC,SAAzB,CAApK,EAAyM,UAAzM,EAAqN,KAAK+B,KAAL,CAAWG,aAAX,CAAyBvB,WAAzB,CAArN,CAAP;AACD;AALI,GAAP;AAOD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveDescription = toHaveDescription;\n\nvar _utils = require(\"./utils\");\n\n// See algoritm: https://www.w3.org/TR/accname-1.1/#mapping_additional_nd_description\nfunction toHaveDescription(htmlElement, checkWith) {\n  (0, _utils.deprecate)('toHaveDescription', 'Please use toHaveAccessibleDescription.');\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveDescription, this);\n  const expectsDescription = checkWith !== undefined;\n  const descriptionIDRaw = htmlElement.getAttribute('aria-describedby') || '';\n  const descriptionIDs = descriptionIDRaw.split(/\\s+/).filter(Boolean);\n  let description = '';\n\n  if (descriptionIDs.length > 0) {\n    const document = htmlElement.ownerDocument;\n    const descriptionEls = descriptionIDs.map(descriptionID => document.getElementById(descriptionID)).filter(Boolean);\n    description = (0, _utils.normalize)(descriptionEls.map(el => el.textContent).join(' '));\n  }\n\n  return {\n    pass: expectsDescription ? checkWith instanceof RegExp ? checkWith.test(description) : this.equals(description, checkWith) : Boolean(description),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveDescription`, 'element', ''), `Expected the element ${to} have description`, this.utils.printExpected(checkWith), 'Received', this.utils.printReceived(description));\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}