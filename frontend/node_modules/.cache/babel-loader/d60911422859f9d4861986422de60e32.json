{"ast":null,"code":"var _jsxFileName = \"/Users/meaganruan/4900project/evently/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst express = require(\"express\");\n\nconst cors = require(\"cors\");\n\nconst knex = require(\"knex\");\n\nrequire(\"dotenv\").config();\n\nconst db = knex({\n  client: \"pg\",\n  connection: {\n    host: process.env.DATABASE_HOST,\n    user: process.env.DATABASE_USERNAME,\n    password: process.env.DATABASE_PASSWORD,\n    database: process.env.DATABASE\n  }\n});\nconst app = express();\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(express.json()); // CORS implemented so that we don't get errors when trying to access the server from a different server location\n\napp.use(cors()); // GET: Fetch all movies from the database\n\napp.get(\"/\", (req, res) => {\n  db.select(\"*\").from(\"movies\").then(data => {\n    console.log(data);\n    res.json(data);\n  }).catch(err => {\n    console.log(err);\n  });\n});\nconst port = process.env.PORT || 5000;\napp.listen(port, () => console.log(`Server running on port ${port}, http://localhost:${port}`));\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/meaganruan/4900project/evently/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","express","require","cors","knex","config","db","client","connection","host","process","env","DATABASE_HOST","user","DATABASE_USERNAME","password","DATABASE_PASSWORD","database","DATABASE","app","use","urlencoded","extended","json","get","req","res","select","from","then","data","console","log","catch","err","port","PORT","listen","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB;;AAEA,MAAMC,EAAE,GAAGF,IAAI,CAAC;AACdG,EAAAA,MAAM,EAAE,IADM;AAEdC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,aADR;AAEVC,IAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG,iBAFR;AAGVC,IAAAA,QAAQ,EAAEL,OAAO,CAACC,GAAR,CAAYK,iBAHZ;AAIVC,IAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJZ;AAFE,CAAD,CAAf;AAUA,MAAMC,GAAG,GAAGlB,OAAO,EAAnB;AAEAkB,GAAG,CAACC,GAAJ,CAAQnB,OAAO,CAACoB,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAH,GAAG,CAACC,GAAJ,CAAQnB,OAAO,CAACsB,IAAR,EAAR,E,CAEA;;AACAJ,GAAG,CAACC,GAAJ,CAAQjB,IAAI,EAAZ,E,CAEA;;AACAgB,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBpB,EAAAA,EAAE,CAACqB,MAAH,CAAU,GAAV,EACGC,IADH,CACQ,QADR,EAEGC,IAFH,CAESC,IAAD,IAAU;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,IAAAA,GAAG,CAACH,IAAJ,CAASO,IAAT;AACD,GALH,EAMGG,KANH,CAMUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GARH;AASD,CAVD;AAYA,MAAMC,IAAI,GAAGzB,OAAO,CAACC,GAAR,CAAYyB,IAAZ,IAAoB,IAAjC;AAEAjB,GAAG,CAACkB,MAAJ,CAAWF,IAAX,EAAiB,MACfJ,OAAO,CAACC,GAAR,CAAa,0BAAyBG,IAAK,sBAAqBA,IAAK,EAArE,CADF;AAIArC,QAAQ,CAACwC,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAxC,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst knex = require(\"knex\");\nrequire(\"dotenv\").config();\n\nconst db = knex({\n  client: \"pg\",\n  connection: {\n    host: process.env.DATABASE_HOST,\n    user: process.env.DATABASE_USERNAME,\n    password: process.env.DATABASE_PASSWORD,\n    database: process.env.DATABASE,\n  },\n});\n\nconst app = express();\n\napp.use(express.urlencoded({ extended: false }));\napp.use(express.json());\n\n// CORS implemented so that we don't get errors when trying to access the server from a different server location\napp.use(cors());\n\n// GET: Fetch all movies from the database\napp.get(\"/\", (req, res) => {\n  db.select(\"*\")\n    .from(\"movies\")\n    .then((data) => {\n      console.log(data);\n      res.json(data);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n});\n\nconst port = process.env.PORT || 5000;\n\napp.listen(port, () =>\n  console.log(`Server running on port ${port}, http://localhost:${port}`)\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}