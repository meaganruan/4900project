{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveFocus = toHaveFocus;\n\nvar _utils = require(\"./utils\");\n\nfunction toHaveFocus(element) {\n  (0, _utils.checkHtmlElement)(element, toHaveFocus, this);\n  return {\n    pass: element.ownerDocument.activeElement === element,\n    message: () => {\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveFocus`, 'element', ''), '', 'Expected element with focus:', `  ${this.utils.printExpected(element)}`, 'Received element with focus:', `  ${this.utils.printReceived(element.ownerDocument.activeElement)}`].join('\\n');\n    }\n  };\n}","map":{"version":3,"sources":["/Users/meaganruan/4900project/evently/node_modules/@testing-library/jest-dom/dist/to-have-focus.js"],"names":["Object","defineProperty","exports","value","toHaveFocus","_utils","require","element","checkHtmlElement","pass","ownerDocument","activeElement","message","utils","matcherHint","isNot","printExpected","printReceived","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASF,WAAT,CAAqBG,OAArB,EAA8B;AAC5B,GAAC,GAAGF,MAAM,CAACG,gBAAX,EAA6BD,OAA7B,EAAsCH,WAAtC,EAAmD,IAAnD;AACA,SAAO;AACLK,IAAAA,IAAI,EAAEF,OAAO,CAACG,aAAR,CAAsBC,aAAtB,KAAwCJ,OADzC;AAELK,IAAAA,OAAO,EAAE,MAAM;AACb,aAAO,CAAC,KAAKC,KAAL,CAAWC,WAAX,CAAwB,GAAE,KAAKC,KAAL,GAAa,MAAb,GAAsB,EAAG,cAAnD,EAAkE,SAAlE,EAA6E,EAA7E,CAAD,EAAmF,EAAnF,EAAuF,8BAAvF,EAAwH,KAAI,KAAKF,KAAL,CAAWG,aAAX,CAAyBT,OAAzB,CAAkC,EAA9J,EAAiK,8BAAjK,EAAkM,KAAI,KAAKM,KAAL,CAAWI,aAAX,CAAyBV,OAAO,CAACG,aAAR,CAAsBC,aAA/C,CAA8D,EAApQ,EAAuQO,IAAvQ,CAA4Q,IAA5Q,CAAP;AACD;AAJI,GAAP;AAMD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveFocus = toHaveFocus;\n\nvar _utils = require(\"./utils\");\n\nfunction toHaveFocus(element) {\n  (0, _utils.checkHtmlElement)(element, toHaveFocus, this);\n  return {\n    pass: element.ownerDocument.activeElement === element,\n    message: () => {\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveFocus`, 'element', ''), '', 'Expected element with focus:', `  ${this.utils.printExpected(element)}`, 'Received element with focus:', `  ${this.utils.printReceived(element.ownerDocument.activeElement)}`].join('\\n');\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}