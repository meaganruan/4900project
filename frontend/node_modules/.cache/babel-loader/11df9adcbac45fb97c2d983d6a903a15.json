{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeEmpty = toBeEmpty;\n\nvar _utils = require(\"./utils\");\n\nfunction toBeEmpty(element) {\n  (0, _utils.deprecate)('toBeEmpty', 'Please use instead toBeEmptyDOMElement for finding empty nodes in the DOM.');\n  (0, _utils.checkHtmlElement)(element, toBeEmpty, this);\n  return {\n    pass: element.innerHTML === '',\n    message: () => {\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeEmpty`, 'element', ''), '', 'Received:', `  ${this.utils.printReceived(element.innerHTML)}`].join('\\n');\n    }\n  };\n}","map":{"version":3,"sources":["/Users/meaganruan/4900project/evently/node_modules/@testing-library/jest-dom/dist/to-be-empty.js"],"names":["Object","defineProperty","exports","value","toBeEmpty","_utils","require","element","deprecate","checkHtmlElement","pass","innerHTML","message","utils","matcherHint","isNot","printReceived","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,SAAR,GAAoBA,SAApB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASF,SAAT,CAAmBG,OAAnB,EAA4B;AAC1B,GAAC,GAAGF,MAAM,CAACG,SAAX,EAAsB,WAAtB,EAAmC,4EAAnC;AACA,GAAC,GAAGH,MAAM,CAACI,gBAAX,EAA6BF,OAA7B,EAAsCH,SAAtC,EAAiD,IAAjD;AACA,SAAO;AACLM,IAAAA,IAAI,EAAEH,OAAO,CAACI,SAAR,KAAsB,EADvB;AAELC,IAAAA,OAAO,EAAE,MAAM;AACb,aAAO,CAAC,KAAKC,KAAL,CAAWC,WAAX,CAAwB,GAAE,KAAKC,KAAL,GAAa,MAAb,GAAsB,EAAG,YAAnD,EAAgE,SAAhE,EAA2E,EAA3E,CAAD,EAAiF,EAAjF,EAAqF,WAArF,EAAmG,KAAI,KAAKF,KAAL,CAAWG,aAAX,CAAyBT,OAAO,CAACI,SAAjC,CAA4C,EAAnJ,EAAsJM,IAAtJ,CAA2J,IAA3J,CAAP;AACD;AAJI,GAAP;AAMD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeEmpty = toBeEmpty;\n\nvar _utils = require(\"./utils\");\n\nfunction toBeEmpty(element) {\n  (0, _utils.deprecate)('toBeEmpty', 'Please use instead toBeEmptyDOMElement for finding empty nodes in the DOM.');\n  (0, _utils.checkHtmlElement)(element, toBeEmpty, this);\n  return {\n    pass: element.innerHTML === '',\n    message: () => {\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeEmpty`, 'element', ''), '', 'Received:', `  ${this.utils.printReceived(element.innerHTML)}`].join('\\n');\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}